(window.webpackJsonp=window.webpackJsonp||[]).push([[69],{415:function(t,e,a){"use strict";a.r(e);var s=a(42),r=Object(s.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[a("RouterLink",{attrs:{to:"/util-crypto/"}},[t._v("Polkadot JS Common")]),t._v(" › "),a("RouterLink",{attrs:{to:"/util-crypto/globals.html"}},[t._v("Globals")]),t._v(" › "),a("RouterLink",{attrs:{to:"/util-crypto/modules/_packages_util_crypto_src_base32_encode_.html"}},[t._v('"packages/util-crypto/src/base32/encode"')])],1),t._v(" "),a("h1",{attrs:{id:"module-packages-util-crypto-src-base32-encode"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#module-packages-util-crypto-src-base32-encode"}},[t._v("#")]),t._v(' Module: "packages/util-crypto/src/base32/encode"')]),t._v(" "),a("h2",{attrs:{id:"index"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#index"}},[t._v("#")]),t._v(" Index")]),t._v(" "),a("h3",{attrs:{id:"functions"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#functions"}},[t._v("#")]),t._v(" Functions")]),t._v(" "),a("ul",[a("li",[a("RouterLink",{attrs:{to:"/util-crypto/modules/_packages_util_crypto_src_base32_encode_.html#base32encode"}},[t._v("base32Encode")])],1)]),t._v(" "),a("h2",{attrs:{id:"functions-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#functions-2"}},[t._v("#")]),t._v(" Functions")]),t._v(" "),a("h3",{attrs:{id:"base32encode"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#base32encode"}},[t._v("#")]),t._v(" base32Encode")]),t._v(" "),a("p",[t._v("▸ "),a("strong",[t._v("base32Encode")]),t._v("("),a("code",[t._v("value")]),t._v(": Uint8Array | string | Buffer | number[], "),a("code",[t._v("ipfsCompat")]),t._v(": boolean): "),a("em",[t._v("string")])]),t._v(" "),a("p",[a("em",[t._v("Defined in "),a("a",{attrs:{href:"https://github.com/polkadot-js/common/blob/3b383b97/packages/util-crypto/src/base32/encode.ts#L19",target:"_blank",rel:"noopener noreferrer"}},[t._v("packages/util-crypto/src/base32/encode.ts:19"),a("OutboundLink")],1)])]),t._v(" "),a("p",[a("strong",[a("code",[t._v("name")])]),t._v(" base32Encode")]),t._v(" "),a("p",[a("strong",[a("code",[t._v("summary")])]),t._v(" Creates a base32 value.")]),t._v(" "),a("p",[a("strong",[a("code",[t._v("description")])]),t._v("\nFrom the provided input, create the base32 and return the result as a string.")]),t._v(" "),a("p",[a("strong",[t._v("Parameters:")])]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("Name")]),t._v(" "),a("th",[t._v("Type")]),t._v(" "),a("th",[t._v("Default")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[a("code",[t._v("value")])]),t._v(" "),a("td",[t._v("Uint8Array | string | Buffer | number[]")]),t._v(" "),a("td",[t._v("-")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("ipfsCompat")])]),t._v(" "),a("td",[t._v("boolean")]),t._v(" "),a("td",[t._v("false")])])])]),t._v(" "),a("p",[a("strong",[t._v("Returns:")]),t._v(" "),a("em",[t._v("string")])])])}),[],!1,null,null,null);e.default=r.exports}}]);